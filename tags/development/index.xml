<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Development on Elyézer Rezende</title><link>https://elyezer.com/tags/development/</link><description>Recent content in Development on Elyézer Rezende</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 28 Oct 2013 12:00:47 +0000</lastBuildDate><atom:link href="https://elyezer.com/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>The Architecture of Open Source Applications</title><link>https://elyezer.com/posts/the-architecture-of-open-source-applications/</link><pubDate>Mon, 28 Oct 2013 12:00:47 +0000</pubDate><guid>https://elyezer.com/posts/the-architecture-of-open-source-applications/</guid><description>Great book about Open Source Applications architecture and performance</description></item><item><title>Localize your apps with Google Translator Toolkit</title><link>https://elyezer.com/posts/localize-your-apps-with-google-translator-toolkit/</link><pubDate>Fri, 30 Mar 2012 13:29:12 +0000</pubDate><guid>https://elyezer.com/posts/localize-your-apps-with-google-translator-toolkit/</guid><description>Google Translator Toolkit has launched support for four new translation-related file formats:
Android Resource (.xml) Application Resource Bundle (.arb) Chrome Extension (.json) GNU gettext-based (.po) Now you could localize your Android App easily.
Source: http://googledevelopers.blogspot.com.br/2012/03/localize-your-apps-and-content-more.html</description></item><item><title>Android screen capture with Eclipse</title><link>https://elyezer.com/posts/android-screen-capture-with-eclipse/</link><pubDate>Tue, 13 Mar 2012 17:20:05 +0000</pubDate><guid>https://elyezer.com/posts/android-screen-capture-with-eclipse/</guid><description>Taking a screen shot of your Android app with Eclipse is very easy, in Devices view, select the Screen Capture tool from the toolbar with an Android device or emulator selected. After that you could: Refresh to update the view, Rotate, Save the screen shot or Copy the image to the clipboard.
If you don&amp;rsquo;t have the Device view opened, you could open it from Window &amp;gt; Show View &amp;gt; Other .</description></item><item><title>Reading application's versionCode and versionName</title><link>https://elyezer.com/posts/reading-applications-versioncode-and-versionname/</link><pubDate>Thu, 05 Jan 2012 14:45:00 +0000</pubDate><guid>https://elyezer.com/posts/reading-applications-versioncode-and-versionname/</guid><description>When versioning your application, you use the AndroidManifest.xml to specify the versionCode and versionName.
You can read your application&amp;rsquo;s versionCode and versionName from you activity using the following code:
PackageInfo packageInfo = getPackageManager().getPackageInfo(getPackageName(), 0); int versionNumber = packageInfo.versionCode; String versionName = packageInfo.versionName; To know more about versioning your app read de documentation.</description></item><item><title>String format in String Resources</title><link>https://elyezer.com/posts/string-format-in-string-resources/</link><pubDate>Wed, 28 Dec 2011 19:36:00 +0000</pubDate><guid>https://elyezer.com/posts/string-format-in-string-resources/</guid><description>The string format, when added to string.xml resource, has a differente syntax, for exemple:
Hello, %s! You have %d new messages. Becomes:
Hello, %1$s! You have %2$d new messages. The syntax is: *%&amp;lt;position&amp;gt;$&amp;lt;type&amp;gt;*. where &amp;lt;position&amp;gt; starts at 1 and type is the Java String format like d, s, f.
Source: String Resources</description></item><item><title>Updating a preference value without reloading PreferenceActivity</title><link>https://elyezer.com/posts/updating-a-preference-value-without-reloading/</link><pubDate>Thu, 22 Dec 2011 19:30:05 +0000</pubDate><guid>https://elyezer.com/posts/updating-a-preference-value-without-reloading/</guid><description>This code snippet shows how to get a reference to a preference in PreferenceActivity. With this reference, you could update the UI without reloading the PreferenceActivity.
Source: Update preference value without reloading PreferenceActivity</description></item></channel></rss>